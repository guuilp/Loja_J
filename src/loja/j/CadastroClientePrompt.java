package loja.j;

import java.util.Collections;
import java.util.Iterator;
import javax.swing.JOptionPane;
import javax.swing.UIManager;

/**
 *
 * @author a110051
 */
public class CadastroClientePrompt extends javax.swing.JFrame {
    Prateleira prateleira1;
    
    public CadastroClientePrompt(Prateleira prateleira) {
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (Exception e) {
        }
        initComponents();
        this.setLocationRelativeTo(null);
        prateleira1 = prateleira;
    }

        public Cliente CadastrarNovoCliente (String rg, String nome, String data_nascimento, String cidade_residencia) {
        Cliente cliente1 = new Cliente();
        cliente1.setCidade_residencia(cidade_residencia);
        cliente1.setData_nascimento(data_nascimento);
        cliente1.setNome(nome);
        cliente1.setRg(rg);
        return (cliente1); 
    }
        
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jlNome = new javax.swing.JLabel();
        jtNome = new javax.swing.JTextField();
        jlRg = new javax.swing.JLabel();
        jftRg = new javax.swing.JFormattedTextField();
        jlData = new javax.swing.JLabel();
        jftData = new javax.swing.JFormattedTextField();
        jlCidade = new javax.swing.JLabel();
        jtCidade = new javax.swing.JTextField();
        jbCadastrar = new javax.swing.JButton();
        jbLimpar = new javax.swing.JButton();
        jbUltimoCliente = new javax.swing.JButton();
        jbConsultaRg = new javax.swing.JButton();
        jbConsultaNome = new javax.swing.JButton();
        jbConsultaData = new javax.swing.JButton();
        jbVoltar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Cadastro de Cliente");

        jlNome.setText("Nome");

        jlRg.setText("RG");

        try {
            jftRg.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##.###.###-#")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jftRg.setToolTipText("");
        jftRg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jftRgActionPerformed(evt);
            }
        });

        jlData.setText("Data Nascimento");

        try {
            jftData.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jlCidade.setText("Cidade");

        jbCadastrar.setText("Cadastrar");
        jbCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCadastrarActionPerformed(evt);
            }
        });

        jbLimpar.setText("Limpar");
        jbLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbLimparActionPerformed(evt);
            }
        });

        jbUltimoCliente.setText("Ultimo cliente cadastrado");
        jbUltimoCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbUltimoClienteActionPerformed(evt);
            }
        });

        jbConsultaRg.setText("Consulta por RG");
        jbConsultaRg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbConsultaRgActionPerformed(evt);
            }
        });

        jbConsultaNome.setText("Consulta por nome");
        jbConsultaNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbConsultaNomeActionPerformed(evt);
            }
        });

        jbConsultaData.setText("Consulta por data de nascimento");
        jbConsultaData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbConsultaDataActionPerformed(evt);
            }
        });

        jbVoltar.setText("Voltar");
        jbVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbVoltarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jlNome)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jlData)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jftData, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jlRg)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jftRg))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jlCidade)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addComponent(jLabel1)))
                .addContainerGap(28, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jbVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbUltimoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbConsultaNome))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbLimpar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbConsultaRg, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jbConsultaData, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(64, 64, 64))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlNome)
                    .addComponent(jtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlRg)
                    .addComponent(jftRg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlData)
                    .addComponent(jftData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlCidade)
                    .addComponent(jtCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbCadastrar)
                    .addComponent(jbLimpar)
                    .addComponent(jbConsultaRg))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbUltimoCliente)
                    .addComponent(jbConsultaNome))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbConsultaData)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbVoltar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jftRgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jftRgActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jftRgActionPerformed

    private void jbCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCadastrarActionPerformed
        try{ 
            Cliente cliente = CadastrarNovoCliente( jftRg.getText(),
                                                    jtNome.getText(),
                                                    jftData.getText(),
                                                    jtCidade.getText());
            prateleira1.add(cliente);
            JOptionPane.showMessageDialog(this, "Cliente cadastrado com sucesso!");
            jtNome.setText("");
            jtCidade.setText(""); 
            jftData.setText("");
            jftRg.setText(""); 
        } catch (Exception e){
            JOptionPane.showMessageDialog(null, "Problema ao cadastrar, verifique os dados", 
                                          "Erro!", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbCadastrarActionPerformed

    private void jbLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbLimparActionPerformed
            jtNome.setText("");
            jtCidade.setText(""); 
            jftData.setText("");
            jftRg.setText(""); 
    }//GEN-LAST:event_jbLimparActionPerformed

    private void jbConsultaRgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbConsultaRgActionPerformed
        if (prateleira1.size() == 0){
            JOptionPane.showMessageDialog(null, "Não há clientes cadastrados", 
                                          "Erro!", javax.swing.JOptionPane.ERROR_MESSAGE);
        } else {
            Cliente c = null;
            String informacao = new String();
            informacao = "Nome            RG                       Data Nascimento         Cidade Residência\n";
            
            ComparadorClientePorRG ccpr = new ComparadorClientePorRG();
            Collections.sort(prateleira1, ccpr);
            
            Iterator<Cliente> i = prateleira1.iterator();
            while(i.hasNext()) {
                c = i.next();
                informacao += c.getNome()                  + "     "
                           +  c.getRg()                    + "         "
                           +  c.getData_nascimento()       + "                   "
                           +  c.getCidade_residencia()     + "\n";
            }
            JOptionPane.showMessageDialog(null, informacao);
        }
    }//GEN-LAST:event_jbConsultaRgActionPerformed

    private void jbUltimoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbUltimoClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jbUltimoClienteActionPerformed

    private void jbConsultaNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbConsultaNomeActionPerformed
        if (prateleira1.size() == 0){
            JOptionPane.showMessageDialog(null, "Não há clientes cadastrados", 
                                          "Erro!", javax.swing.JOptionPane.ERROR_MESSAGE);
        } else {
            Cliente c = null;
            String informacao = new String();
            informacao = "Nome            RG                       Data Nascimento         Cidade Residência\n";
            
            ComparadorClientePorNome ccpr = new ComparadorClientePorNome();
            Collections.sort(prateleira1, ccpr);
            
            Iterator<Cliente> i = prateleira1.iterator();
            while(i.hasNext()) {
                c = i.next();
                informacao += c.getNome()                  + "     "
                           +  c.getRg()                    + "         "
                           +  c.getData_nascimento()       + "                   "
                           +  c.getCidade_residencia()     + "\n";
            }
            JOptionPane.showMessageDialog(null, informacao);
        }
    }//GEN-LAST:event_jbConsultaNomeActionPerformed

    private void jbConsultaDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbConsultaDataActionPerformed
        if (prateleira1.size() == 0){
            JOptionPane.showMessageDialog(null, "Não há clientes cadastrados", 
                                          "Erro!", javax.swing.JOptionPane.ERROR_MESSAGE);
        } else {
            Cliente c = null;
            String informacao = new String();
            informacao = "Nome            RG                       Data Nascimento         Cidade Residência\n";
            
            ComparadorClientePorData ccpr = new ComparadorClientePorData();
            Collections.sort(prateleira1, ccpr);
            
            Iterator<Cliente> i = prateleira1.iterator();
            while(i.hasNext()) {
                c = i.next();
                informacao += c.getNome()                  + "     "
                           +  c.getRg()                    + "         "
                           +  c.getData_nascimento()       + "                   "
                           +  c.getCidade_residencia()     + "\n";
            }
            JOptionPane.showMessageDialog(null, informacao);
        }
    }//GEN-LAST:event_jbConsultaDataActionPerformed

    private void jbVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbVoltarActionPerformed
        Menu_Inicial mi = new Menu_Inicial();
        this.setVisible(false);
        mi.setVisible(true);
    }//GEN-LAST:event_jbVoltarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastroClientePrompt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastroClientePrompt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastroClientePrompt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroClientePrompt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton jbCadastrar;
    private javax.swing.JButton jbConsultaData;
    private javax.swing.JButton jbConsultaNome;
    private javax.swing.JButton jbConsultaRg;
    private javax.swing.JButton jbLimpar;
    private javax.swing.JButton jbUltimoCliente;
    private javax.swing.JButton jbVoltar;
    private javax.swing.JFormattedTextField jftData;
    private javax.swing.JFormattedTextField jftRg;
    private javax.swing.JLabel jlCidade;
    private javax.swing.JLabel jlData;
    private javax.swing.JLabel jlNome;
    private javax.swing.JLabel jlRg;
    private javax.swing.JTextField jtCidade;
    private javax.swing.JTextField jtNome;
    // End of variables declaration//GEN-END:variables
}
